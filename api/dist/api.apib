FORMAT: 1A

# API specification

# Group WiFi Settings

## Get current WiFi Status [GET /wifi]

+ Response 200 (application/json)

        {
            "mode": true,
            "connected": true
        }

## Scan for available WiFi Access Points [GET /wifi/scan]

+ Response 200 (application/json)

        [
            {
                "ssid": "Thinking Thing",
                "channel": 1,
                "rssi": -58,
                "open": false
            },
            {
                "ssid": "Other network",
                "channel": 1,
                "rssi": -70,
                "open": true
            },
            {
                "ssid": "Third network",
                "channel": 1,
                "rssi": -90,
                "open": false
            }
        ]

## Connect to the Access Point [POST /wifi/connect]

+ Request (application/json)
  + Body

            {
            }

+ Response 204 (application/json)

+ Response 400 (application/json)

## Disconnect from the Access Point [POST /wifi/disconnect]

+ Response 204 (application/json)

+ Response 400 (application/json)

# Group Application Settings

## Settings [/settings]

### Get Schema [OPTIONS]

+ Response 200 (application/json)

        [
            {
                "name": "mqtt",
                "label": "MQTT Settings",
                "description": "Connect the device to the MQTT Server",
                "params": [
                    {
                        "name": "enabled",
                        "label": "Enabled",
                        "type": "bool"
                    },
                    {
                        "name": "server",
                        "label": "Server",
                        "type": "string"
                    },
                    {
                        "name": "port",
                        "label": "Port",
                        "type": "int"
                    }
                ]
            },
            {
                "name": "co2",
                "label": "CO2 Levels",
                "params": [
                    {
                        "name": "warning",
                        "label": "Warning",
                        "description": "Warning CO2 level in ppm",
                        "type": "int"
                    },
                    {
                        "name": "danger",
                        "label": "Danger",
                        "description": "Dangerous CO2 level in ppm",
                        "type": "int"
                    }
                ]
            }
        ]

### Get current values [GET]

+ Response 200 (application/json)

        {
            "mqtt": {
                "enabled": false,
                "server": "mqtt.example.com",
                "port": 1234
            },
            "co2": {
                "warning": 1000,
                "danger": 1400
            }
        }

### Update [POST]

+ Request (application/json)
  + Body

            {
                "mqtt": {
                    "enabled": false,
                    "server": "mqtt.example.com",
                    "port": 1234
                },
                "co2": {
                    "warning": 1000,
                    "danger": 1400,
                }
            }

+ Response 204 (application/json)

+ Response 400 (application/json)
